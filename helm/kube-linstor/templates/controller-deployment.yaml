{{- $fullName := include "linstor.fullname" . -}}
{{- if .Values.controller.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ $fullName }}-controller
  name: {{ $fullName }}-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $fullName }}-controller
  template:
    metadata:
      labels:
        app: {{ $fullName }}-controller
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/controller-secret.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.controller.image.pullSecrets | nindent 8 }}
      {{- if or .Values.controller.affinity .Values.controller.podAntiAffinity }}
      affinity:
        {{- with .Values.controller.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if eq .Values.controller.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ .Values.controller.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchLabels:
                  app: {{ $fullName }}-controller
        {{- else if eq .Values.controller.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ .Values.controller.podAntiAffinityTopologyKey }}"
                labelSelector:
                  matchLabels:
                    app: {{ $fullName }}-controller
        {{- end }}
      {{- end }}
      {{- if or .Values.controller.ssl.enabled .Values.satellite.ssl.enabled .Values.controller.initSettings.enabled }}
      initContainers:
      {{- if or .Values.controller.ssl.enabled .Values.satellite.ssl.enabled }}
      - name: load-certs
        {{- with .Values.controller.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        command:
        - /bin/bash
        - -xec
        - |-
          tmp="$(mktemp -u).p12"
          openssl pkcs12 -export -in /tls/controller/tls.crt -inkey /tls/controller/tls.key -out "$tmp" -name linstor-controller -passin 'pass:linstor' -passout 'pass:linstor'
          rm -f /config/ssl/keystore.jks /config/ssl/certificates.jks /config/ssl/trustore_client.jks
          keytool -importkeystore -srcstorepass linstor -deststorepass linstor -keypass linstor -srckeystore "$tmp" -destkeystore /config/ssl/keystore.jks
          {{- if .Values.controller.ssl.enabled }}
          keytool -importcert -noprompt -deststorepass linstor -keypass linstor -file /tls/client/tls.crt -alias linstor-client -destkeystore /config/ssl/trustore_client.jks
          {{- end }}
          {{- if .Values.satellite.ssl.enabled }}
          keytool -importcert -noprompt -deststorepass linstor -keypass linstor -file /tls/satellite/tls.crt -alias linstor-satellite -destkeystore /config/ssl/certificates.jks
          {{- end }}
          rm -f "$tmp"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: config-ssl
          mountPath: /config/ssl
        {{- if or .Values.controller.ssl.enabled .Values.satellite.ssl.enabled }}
        - name: controller-tls
          mountPath: /tls/controller
        {{- end }}
        {{- if .Values.controller.ssl.enabled }}
        - name: client-tls
          mountPath: /tls/client
        {{- end }}
        {{- if .Values.satellite.ssl.enabled }}
        - name: satellite-tls
          mountPath: /tls/satellite
        {{- end }}
      {{- end }}
      {{- if .Values.controller.initSettings.enabled }}
      - name: init-settings
        {{- with .Values.controller.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        command:
        - /bin/bash
        - -xec
        - |-
          echo "setcfgval namespace(netcom) key(PlainConnector/bindaddress) value({{ .Values.controller.initSettings.plainConnectorBindAddress }})
          {{- if .Values.controller.initSettings.disableUserSecurity }}
          setSecLvl secLvl(NO_SECURITY){{ end }}
          shutdown" | /usr/share/linstor-server/bin/Controller -d --logs=/logs --config-directory=/config
        volumeMounts:
        - name: config
          mountPath: /config
        - name: logs
          mountPath: /logs
      {{- end }}
      {{- end }}
      containers:
      - name: linstor-controller
        {{- with .Values.controller.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        command:
        - /k8s-await-election
        - /usr/share/linstor-server/bin/Controller
        - --logs=/logs
        - --config-directory=/config
        livenessProbe:
          httpGet:
            path: /
            port: 9999
            scheme: HTTP
        ports:
        - name: restapi
          containerPort: {{ .Values.controller.port }}
        {{- if .Values.controller.ssl.enabled }}
        - name: ssl
          containerPort: {{ .Values.controller.ssl.port }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /config
        - name: client-config
          mountPath: /etc/linstor
        {{- if or .Values.controller.ssl.enabled .Values.satellite.ssl.enabled }}
        - name: config-ssl
          mountPath: /config/ssl
          readOnly: true
        {{- end }}
        {{- if .Values.controller.ssl.enabled }}
        - name: client-tls
          mountPath: /tls
        {{- end }}
        {{- if .Values.controller.db.tls }}
        - name: db-tls
          mountPath: /tls/db
        {{- end }}
        - name: logs
          mountPath: /logs
        env:
        - name: K8S_AWAIT_ELECTION_ENABLED
          value: "1"
        - name: K8S_AWAIT_ELECTION_NAME
          value: {{ $fullName }}-controller
        - name: K8S_AWAIT_ELECTION_LOCK_NAME
          value: {{ $fullName }}-controller
        - name: K8S_AWAIT_ELECTION_LOCK_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_AWAIT_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: K8S_AWAIT_ELECTION_STATUS_ENDPOINT
          value: :9999
        - name: K8S_AWAIT_ELECTION_SERVICE_NAME
          value: {{ $fullName }}-controller
        - name: K8S_AWAIT_ELECTION_SERVICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_AWAIT_ELECTION_SERVICE_PORTS_JSON
          value: '{{ with include (print $.Template.BasePath "/controller-service.yaml") . | fromYaml }}{{ .spec.ports | toJson }}{{ end }}'
        - name: K8S_AWAIT_ELECTION_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      serviceAccountName: {{ $fullName }}-controller
      priorityClassName: system-node-critical
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - name: config
        secret:
          secretName: {{ $fullName }}-controller
      - name: logs
        hostPath:
          path: /var/log/{{ $fullName }}-controller
      - name: client-config
        configMap:
          name: {{ $fullName }}-client
      {{- if or .Values.controller.ssl.enabled .Values.satellite.ssl.enabled }}
      - name: config-ssl
        emptyDir: {}
      {{- end }}
      {{- if or .Values.controller.ssl.enabled .Values.satellite.ssl.enabled }}
      - name: controller-tls
        secret:
          secretName: {{ $fullName }}-controller-tls
      {{- end }}
      {{- if .Values.controller.ssl.enabled }}
      - name: client-tls
        secret:
          secretName: {{ $fullName }}-client-tls
      {{- end }}
      {{- if .Values.satellite.ssl.enabled }}
      - name: satellite-tls
        secret:
          secretName: {{ $fullName }}-satellite-tls
      {{- end }}
      {{- if .Values.controller.db.tls }}
      - name: db-tls
        secret:
          secretName: {{ $fullName }}-db-tls
      {{- end }}
{{- end }}
