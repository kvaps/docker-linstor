{{- $fullName := include "linstor.fullname" . -}}
{{- if .Values.csi.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $fullName }}-csi-node
spec:
  selector:
    matchLabels:
      app: {{ $fullName }}-csi-node
      role: linstor-csi
  template:
    metadata:
      labels:
        app: {{ $fullName }}-csi-node
        role: linstor-csi
    spec:

      initContainers:
        ## Wait for the satellite pod on this node to be ready -- it must be before the CSI node attempts
        ## to connect to it
        - name: wait-for-satellite
          image: bitnami/kubectl
          imagePullPolicy: {{ .PullPolicy }}
          command:
            - /bin/sh
            - -exc
            - |
              echo "[info] waiting for a pod with label [${SATELLITE_LABEL_SELECTOR}] in namespace [${SATELLITE_NAMESPACE}], on node [${NODE_NAME}]"
              kubectl wait pod -n ${SATELLITE_NAMESPACE} -l ${SATELLITE_LABEL_SELECTOR} --field-selector spec.nodeName=${NODE_NAME} --for=condition=ready
          env:
            - name: SATELLITE_LABEL_SELECTOR
              value: "app={{ $fullName }}-satellite"
            - name: SATELLITE_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

      containers:
      - name: csi-node-driver-registrar
        {{- with .Values.csi.image.csiNodeDriverRegistrar }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --v=5
        # No --timeout here, it's a very recent addition and not very useful for a single call that should return
        # static information
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /registration/linstor.csi.linbit.com /registration/linstor.csi.linbit.com-reg.sock
        volumeMounts:
        - mountPath: /csi/
          name: plugin-dir
        - mountPath: /registration/
          name: registration-dir
      - name: csi-livenessprobe
        {{- with .Values.csi.image.csiLivenessProbe }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --csi-address=$(CSI_ENDPOINT)
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        volumeMounts:
        - mountPath: /csi/
          name: plugin-dir
      - name: linstor-csi-plugin
        {{- with .Values.csi.image.linstorCsiPlugin }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .PullPolicy }}
        {{- end }}
        args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LS_CONTROLLERS)
        - --log-level=debug
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9808
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LS_CONTROLLERS
        {{- if not .Values.controller.ssl.enabled }}
          value: http://{{ $fullName }}-controller:{{ .Values.controller.port }}
        {{- else }}
          value: https://{{ $fullName }}-controller:{{ .Values.controller.ssl.port }}
        - name: LS_USER_CERTIFICATE
          valueFrom:
            secretKeyRef:
              key: tls.crt
              name: {{ $fullName }}-client-tls
        - name: LS_USER_KEY
          valueFrom:
            secretKeyRef:
              key: tls.key
              name: {{ $fullName }}-client-tls
        - name: LS_ROOT_CA
          valueFrom:
            secretKeyRef:
              key: ca.crt
              name: {{ $fullName }}-client-tls
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: pods-mount-dir
        - mountPath: /dev
          name: device-dir
      imagePullSecrets:
        {{- toYaml .Values.csi.image.pullSecrets | nindent 8 }}
      {{- with . }}
      nodeSelector:
        {{- toYaml .Values.csi.node.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.csi.node.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      priorityClassName: system-node-critical
      serviceAccount: {{ $fullName }}-csi-node-sa
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/linstor.csi.linbit.com/
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
{{- end }}
