{{- $fullName := include "linstor.fullname" . -}}
{{- if .Values.satellite.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $fullName }}-satellite
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ $fullName }}-satellite
  template:
    metadata:
      labels:
        app: {{ $fullName }}-satellite
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/satellite-configmap.yaml") . | sha256sum }}
        {{- if .Values.configurator.enabled }}
        checksum/scripts: {{ printf "%s\n%s" (.Files.Get "scripts/functions.sh") (tpl (.Files.Get "scripts/configurator.satellite") .) | sha256sum }}
        {{- end }}
    spec:
      {{- if or .Values.satellite.ssl.enabled .Values.satellite.overwriteDrbdConf }}
      initContainers:
      {{- if .Values.satellite.ssl.enabled }}
      - name: load-certs
        {{- with .Values.satellite.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        command:
        - /bin/sh
        - -exc
        - |
          tmp="$(mktemp -u).p12"
          openssl pkcs12 -export -in /tls/satellite/tls.crt -inkey /tls/satellite/tls.key -out "$tmp" -name linstor-satellite -passin 'pass:linstor' -passout 'pass:linstor'
          rm -f /config/ssl/keystore.jks /config/ssl/certificates.jks
          keytool -importkeystore -srcstorepass linstor -deststorepass linstor -keypass linstor -srckeystore "$tmp" -destkeystore /config/ssl/keystore.jks
          keytool -importcert -noprompt -deststorepass linstor -keypass linstor -file /tls/controller/ca.crt -alias linstor-ca -destkeystore /config/ssl/certificates.jks
          keytool -importcert -noprompt -deststorepass linstor -keypass linstor -file /tls/controller/tls.crt -alias linstor-controller -destkeystore /config/ssl/certificates.jks
          rm -f "$tmp"
        volumeMounts:
        - name: config-ssl
          mountPath: /config/ssl
        - name: controller-tls
          mountPath: /tls/controller
        - name: satellite-tls
          mountPath: /tls/satellite
      {{- end }}
      {{- if .Values.satellite.overwriteDrbdConf }}
      - command:
        - /bin/sh
        - -exc
        - |
          cat /config/drbd.conf > /etc/drbd.conf
          cp -f /config/global_common.conf /etc/drbd.d/global_common.conf
        {{- with .Values.satellite.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        name: load-drbd-conf
        securityContext:
          privileged: true
        volumeMounts:
        - name: config
          mountPath: /config
        - name: etc-drbd-conf
          mountPath: /etc/drbd.conf
        - name: etc-drbd-d
          mountPath: /etc/drbd.d
        - name: usr-local-sbin
          mountPath: /host-bin
      {{- end }}
      {{- end }}
      containers:
      - name: linstor-satellite
        {{- with .Values.satellite.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        securityContext:
          privileged: true
        ports:
        {{- if not .Values.satellite.ssl.enabled }}
        - containerPort: {{ .Values.satellite.port }}
          hostPort: {{ .Values.satellite.port }}
          protocol: TCP
        {{- else }}
        - containerPort: {{ .Values.satellite.ssl.port }}
          hostPort: {{ .Values.satellite.ssl.port }}
          protocol: TCP
        {{- end }}
        readinessProbe:
          tcpSocket:
            {{- if not .Values.satellite.ssl.enabled }}
            port: {{ .Values.satellite.port }}
            {{- else }}
            port: {{ .Values.satellite.ssl.port }}
            {{- end }}
          periodSeconds: 10
          initialDelaySeconds: 5
        volumeMounts:
        - name: config
          mountPath: /config
        {{- if .Values.satellite.ssl.enabled }}
        - name: config-ssl
          mountPath: /config/ssl
          readOnly: true
        {{- end }}
        - name: etc-drbd-conf
          mountPath: /etc/drbd.conf
        - name: etc-drbd-d
          mountPath: /etc/drbd.d
        - name: var-lib-drbd
          mountPath: /var/lib/drbd
        - name: var-lib-linstor
          mountPath: /var/lib/linstor
        - name: var-lib-linstor-d
          mountPath: /var/lib/linstor.d
        - name: lib-modules
          mountPath: /lib/modules
        - name: dev
          mountPath: /dev
        - name: etc-lvm
          mountPath: /etc/lvm
        - name: run-lock-lvm
          mountPath: /run/lock/lvm
        - name: logs
          mountPath: /logs
        - name: run-lvm
          mountPath: /run/lvm
        - name: run-udev
          mountPath: /run/udev
      {{- if .Values.satellite.monitoring.enabled }}
      - name: drbd-reactor
      {{- with .Values.satellite.monitoring.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        securityContext:
          privileged: true
      {{- end }}
      - name: configurator
        {{- with .Values.satellite.image }}
        image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        command:
        - /bin/bash
        - /scripts/configurator.node
        env:
        - name: LS_CONTROLLERS
        {{- if not .Values.controller.ssl.enabled }}
          value: http://{{ $fullName }}-controller:{{ .Values.controller.port }}
        {{- else }}
          value: https://{{ $fullName }}-controller:{{ .Values.controller.ssl.port }}
        {{- end }}
        {{- if .Values.satellite.ssl.enabled }}
        - name: NODE_PORT
          value: "{{ .Values.satellite.ssl.port }}"
        - name: NODE_ENCRYPTION_TYPE
          value: "ssl"
        {{- else }}
        - name: NODE_PORT
          value: "{{ .Values.satellite.port }}"
        - name: NODE_ENCRYPTION_TYPE
          value: "Plain"
        {{- end }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        securityContext:
          privileged: true
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        {{- if .Values.controller.ssl.enabled }}
        - name: client-tls
          mountPath: /tls/client
        {{- end }}
        - name: config
          mountPath: /config
        {{- if .Values.satellite.ssl.enabled }}
        - name: config-ssl
          mountPath: /config/ssl
          readOnly: true
        {{- end }}
        {{- if .Values.configurator.enabled }}
        - name: etc-drbd-conf
          mountPath: /etc/drbd.conf
        - name: etc-drbd-d
          mountPath: /etc/drbd.d
        - name: var-lib-drbd
          mountPath: /var/lib/drbd
        - name: var-lib-linstor
          mountPath: /var/lib/linstor
        - name: var-lib-linstor-d
          mountPath: /var/lib/linstor.d
        - name: lib-modules
          mountPath: /lib/modules
        - name: dev
          mountPath: /dev
        - name: etc-lvm
          mountPath: /etc/lvm
        - name: run-lock-lvm
          mountPath: /run/lock/lvm
        - name: logs
          mountPath: /logs
        - name: run-lvm
          mountPath: /run/lvm
        - name: run-udev
          mountPath: /run/udev
      {{- end }}
      hostIPC: true
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        {{- toYaml .Values.satellite.image.pullSecrets | nindent 8 }}
      {{- if .Values.podSecurityPolicy.enabled }}
      serviceAccountName: {{ $fullName }}-satellite-sa
      {{- end }}
      priorityClassName: system-node-critical
      {{- with .Values.satellite.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.satellite.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - name: etc-drbd-conf
        hostPath:
          path: /etc/drbd.conf
          type: FileOrCreate
      - name: etc-drbd-d
        hostPath:
          path: /etc/drbd.d
      - name: var-lib-drbd
        hostPath:
          path: /var/lib/drbd
      - name: var-lib-linstor
        hostPath:
          path: /var/lib/linstor
      - name: var-lib-linstor-d
        hostPath:
          path: /var/lib/linstor.d
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-local-sbin
        hostPath:
          path: /usr/local/sbin
      - name: dev
        hostPath:
          path: /dev
      - name: etc-lvm
        hostPath:
          path: /etc/lvm
      - name: run-lock-lvm
        hostPath:
          path: /run/lock/lvm
      - name: config
        configMap:
          name: {{ $fullName }}-satellite
      {{- if .Values.satellite.ssl.enabled }}
      - name: config-ssl
        emptyDir: {}
      - name: controller-tls
        secret:
          secretName: {{ $fullName }}-controller-tls
      - name: satellite-tls
        secret:
          secretName: {{ $fullName }}-satellite-tls
      {{- end }}
      {{- if .Values.configurator.enabled }}
      - name: scripts
        configMap:
          name: {{ $fullName }}-configurator
      {{- end }}
      {{- if and .Values.controller.ssl.enabled .Values.configurator.enabled }}
      - name: client-tls
        secret:
          secretName: {{ $fullName }}-client-tls
      {{- end }}
      - name: logs
        hostPath:
          path: /var/log/{{ $fullName }}-satellite
      - name: run-lvm
        hostPath:
          path: /run/lvm
      - name: run-udev
        hostPath:
          path: /run/udev
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.satellite.update.maxUnavailable }}
    type: RollingUpdate
{{- end }}
