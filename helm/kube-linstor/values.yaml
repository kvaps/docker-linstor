# ------------------------------------------------------------------------------
# Linstor-controller is main control point for Linstor, it provides API for
# clients and communicates with satellites for creating and monitor DRBD-devices
# ------------------------------------------------------------------------------

controller:
  enabled: true
  image:
    repository: ghcr.io/kvaps/linstor-controller
    tag: v1.13.0
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  replicaCount: 2

  port: 3370
  ssl:
    enabled: true
    # Certificates generation method: <helm|cert-manager>
    method: helm
    port: 3371

  #hostNetwork: true

  service:
    labels: {}
    annotations:
      prometheus.io/path: "/metrics?error_reports=false"
      prometheus.io/port: "3370"
      prometheus.io/scrape: "true"

  # nodeSelector:
  #   node-role.kubernetes.io/master: ""
  
  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule
  
  initSettings:
    enabled: false
    # Set plain connector listen to localhost 
    plainConnectorBindAddress: "127.0.0.1"
    # Disable user security (required for setting global options)
    disableUserSecurity: true

  # Database config
  db:
    user: linstor
    password: linstor
    connectionUrl: jdbc:h2:/data/linstordb

  # PostgreSQL example
  # db:
  #   user: linstor
  #   password: linstor
  #   connectionUrl: jdbc:postgresql://linstor-db-stolon-proxy/linstor
  
  # Etcd example
  # db:
  #   connectionUrl: etcd://node1:2379,node2:2379
  #   tls: true
  #   cert: |
  #     -----BEGIN CERTIFICATE-----
  #     MIIC2DCCAcCgAwIBAgIBATANBgkqh ...
  #   key: |
  #     -----BEGIN RSA PRIVATE KEY-----
  #     MIIEpAIBAAKCAQEA0xRXCs7WUhmHZ ...
  #   ca: |
  #     -----BEGIN CERTIFICATE-----
  #     MIIDDzCCAfegAwIBAgIRAKTcgKx3g ...
  #   etcdPrefix: "/LINSTOR/"

# ------------------------------------------------------------------------------
# Linstor-satellites run on every node, they listen and perform controller tasks
# They operates directly with LVM and ZFS subsystems
# ------------------------------------------------------------------------------

satellite:
  enabled: true
  image:
    repository: ghcr.io/kvaps/linstor-satellite
    tag: v1.13.0
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  port: 3366
  ssl:
    enabled: true
    # Certificates generation method: helm/cert-manager
    method: helm
    port: 3367

  # Oerwrite drbd.conf and global_common.conf files. This option will enable
  # usage-count=no and udev-always-use-vnr options by default
  overwriteDrbdConf: true

  # How many nodes can simultaneously download new image
  update:
    maxUnavailable: 40

# ------------------------------------------------------------------------------
# drbd-reactor is a optional component that performs DRBD events processing.
# It serves a prometheus compatible endpoint and exposing various DRBD metrics.
# ------------------------------------------------------------------------------
reactor: 
  enabled: true
  port: 9942
  pollInterval: 60
  service:
    labels: {}
    annotations:
      prometheus.io/path: "/"
      prometheus.io/port: "9942"
      prometheus.io/scrape: "true"

  # nodeSelector:
  #   linstor-satellite: ""
  
  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule

# ------------------------------------------------------------------------------
# Linstor configuration script parameters. It enables automatic join nodes to
# the cluster and allows you declaratively configure basic linstor entities.
# ------------------------------------------------------------------------------
configurator:
  enabled: true

  # Join the nodes automatically at init
  autoJoinNodes: true

  #controller:
  #  props:
  #    DrbdOptions/Net/csums-alg: crc32
  #  resourceGroups:
  #  - name: DfltRscGrp
  #    props: {}
  #    volumeGroups:
  #    - volumeNumber: 0
  #      props: {}
  #    selectFilter:
  #      PlaceCount: 2
  #      StoragePoolList: ["lvm-thin"]
  #      LayerStack:
  #      - DRBD
  #      - STORAGE

  #nodes:
  #- regex: ".*" # Regular expression to match node names
  #  props:
  #    Aux/aaa: bbb
  #  interfaces:
  #  - name: data
  #    ip: 10.29.0.0/16 # specify subnet for additional interface on node
  #  storagePools:
  #  - name: DfltDisklessStorPool
  #    providerKind: DISKLESS
  #    props:
  #      PrefNic: data
  #  - name: lvm-thick
  #    providerKind: LVM
  #    props:
  #      StorDriver/LvmVg: drbdpool
  #  - name: lvm-thin
  #    providerKind: LVM_THIN
  #    props:
  #      StorDriver/LvmVg: drbdpool
  #      StorDriver/ThinPool: thinpool
  #  - name: my-linstor-zpool
  #    providerKind: ZFS
  #    props:
  #      StorDriver/ZPool: for-linstor
  #  - name: my-linstor-zpool-thin
  #    providerKind: ZFS_THIN
  #    props:
  #      StorDriver/ZPoolThin: for-linstor

# ------------------------------------------------------------------------------
# Linstor CSI driver provides compatibility level for adding Linstor support
# for Kubernetes
# ------------------------------------------------------------------------------

csi:
  enabled: true
  image:
    pullSecrets:
      - name: regsecret
    linstorCsiPlugin:
      repository: ghcr.io/kvaps/linstor-csi
      tag: v1.13.0
      pullPolicy: IfNotPresent
    csiProvisioner:
      repository: k8s.gcr.io/sig-storage/csi-provisioner
      tag: v2.2.2
      pullPolicy: IfNotPresent
    csiAttacher:
      repository: k8s.gcr.io/sig-storage/csi-attacher
      tag: v3.2.1
      pullPolicy: IfNotPresent
    csiResizer:
      repository: k8s.gcr.io/sig-storage/csi-resizer
      tag: v1.2.0
      pullPolicy: IfNotPresent
    csiSnapshotter:
      repository: k8s.gcr.io/sig-storage/csi-snapshotter
      tag: v4.1.1
      pullPolicy: IfNotPresent
    csiNodeDriverRegistrar:
      repository: k8s.gcr.io/sig-storage/csi-node-driver-registrar
      tag: v2.2.0
      pullPolicy: IfNotPresent
    csiLivenessProbe:
      repository: k8s.gcr.io/sig-storage/livenessprobe
      tag: v2.3.0
      pullPolicy: IfNotPresent

  controller:
    replicaCount: 2

    csiProvisioner:
      topology: false

    # nodeSelector:
    #   node-role.kubernetes.io/master: ""
    
    # tolerations:
    #   - key: node-role.kubernetes.io/master
    #     operator: Exists
    #     effect: NoSchedule

  node: {}
    # nodeSelector:
    #   linstor-satellite: ""
    
    # tolerations:
    #   - key: node-role.kubernetes.io/master
    #     operator: Exists
    #     effect: NoSchedule

haController:
  enabled: true
  image:
    repository: ghcr.io/kvaps/linstor-ha-controller
    tag: v1.13.0
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  replicaCount: 2

  # nodeSelector:
  #   node-role.kubernetes.io/master: ""
  
  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule

# ------------------------------------------------------------------------------
# Stork is a scheduler extender plugin for Kubernetes which allows a storage
# driver to give the Kubernetes scheduler hints about where to place a new pod
# so that it is optimally located for storage performance
# ------------------------------------------------------------------------------

stork:
  enabled: true
  image:
    repository: ghcr.io/kvaps/linstor-stork
    tag: v1.13.0
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  replicaCount: 2

  service:
    labels: {}
    annotations: {}

  # nodeSelector:
  #   node-role.kubernetes.io/master: ""
  
  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule

storkScheduler:
  enabled: true
  image:
    repository: k8s.gcr.io/kube-scheduler
    tag: v1.20.6
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  replicaCount: 2

  # nodeSelector:
  #   node-role.kubernetes.io/master: ""
  
  # tolerations:
  #   - key: node-role.kubernetes.io/master
  #     operator: Exists
  #     effect: NoSchedule

# ------------------------------------------------------------------------------
# Specify if a Pod Security Policy for linstor components must be created
# Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
# ------------------------------------------------------------------------------

podSecurityPolicy:
  enabled: false